// <auto-generated />
using System;
using DictionaryEditorDb;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DictionaryEditorDb.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240710124438_Init2")]
    partial class Init2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DictionaryEditorDb.Models.Language", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("51330434-46c7-455b-8836-b47586390250"),
                            Value = "Russian"
                        },
                        new
                        {
                            Id = new Guid("c6fbc850-7a63-4b4f-9433-57327afa9ba1"),
                            Value = "Ossetian"
                        });
                });

            modelBuilder.Entity("DictionaryEditorDb.Models.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = new Guid("090d25a3-dfb6-48dc-ae66-6bc0c5475d2b"),
                            Value = "часть речи"
                        },
                        new
                        {
                            Id = new Guid("34aa3245-af78-40e2-b8d5-7e700efb3468"),
                            Value = "род"
                        },
                        new
                        {
                            Id = new Guid("c79e4d08-bdf7-4568-a8b0-bea092b7eeae"),
                            Value = "время"
                        },
                        new
                        {
                            Id = new Guid("200a5a2a-5820-488c-ba7e-c574cd1446fb"),
                            Value = "падеж"
                        },
                        new
                        {
                            Id = new Guid("6fc6cab5-cb9c-497f-87de-0ec6e66b7144"),
                            Value = "число"
                        });
                });

            modelBuilder.Entity("DictionaryEditorDb.Models.TagsValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TagId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VocabularyItemId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TagId");

                    b.ToTable("TagsValues");
                });

            modelBuilder.Entity("DictionaryEditorDb.Models.TranslationAndExample", b =>
                {
                    b.Property<Guid>("Word1Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Word2Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Example1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Example2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Word1Id", "Word2Id");

                    b.ToTable("TranslationsAndExamples");
                });

            modelBuilder.Entity("DictionaryEditorDb.Models.VocabularyItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TagsValueId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TagsValueId")
                        .IsUnique();

                    b.ToTable("VocabularyItems");
                });

            modelBuilder.Entity("DictionaryEditorDb.Models.Word", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LanguageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VocabularyItemId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("VocabularyItemId")
                        .IsUnique();

                    b.ToTable("Words");
                });

            modelBuilder.Entity("DictionaryEditorDb.Models.TagsValue", b =>
                {
                    b.HasOne("DictionaryEditorDb.Models.Tag", "Tag")
                        .WithMany("TagsValues")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("DictionaryEditorDb.Models.VocabularyItem", b =>
                {
                    b.HasOne("DictionaryEditorDb.Models.TagsValue", "TagsValue")
                        .WithOne("VocabularyItem")
                        .HasForeignKey("DictionaryEditorDb.Models.VocabularyItem", "TagsValueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TagsValue");
                });

            modelBuilder.Entity("DictionaryEditorDb.Models.Word", b =>
                {
                    b.HasOne("DictionaryEditorDb.Models.Language", "Language")
                        .WithMany("Words")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DictionaryEditorDb.Models.VocabularyItem", "VocabularyItem")
                        .WithOne("Word")
                        .HasForeignKey("DictionaryEditorDb.Models.Word", "VocabularyItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("VocabularyItem");
                });

            modelBuilder.Entity("DictionaryEditorDb.Models.Language", b =>
                {
                    b.Navigation("Words");
                });

            modelBuilder.Entity("DictionaryEditorDb.Models.Tag", b =>
                {
                    b.Navigation("TagsValues");
                });

            modelBuilder.Entity("DictionaryEditorDb.Models.TagsValue", b =>
                {
                    b.Navigation("VocabularyItem")
                        .IsRequired();
                });

            modelBuilder.Entity("DictionaryEditorDb.Models.VocabularyItem", b =>
                {
                    b.Navigation("Word")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
