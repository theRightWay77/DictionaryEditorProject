// <auto-generated />
using System;
using DictionaryEditorDb;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DictionaryEditorDb.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240710152124_start")]
    partial class start
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DictionaryEditorDb.Models.Language", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("66be7803-143c-4353-91f6-1642b3cab3a1"),
                            Value = "Russian"
                        },
                        new
                        {
                            Id = new Guid("3e53afc7-71e5-4dc5-8d6a-87a2ce5031bd"),
                            Value = "Ossetian"
                        });
                });

            modelBuilder.Entity("DictionaryEditorDb.Models.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e1260d2a-e7de-4a22-bd57-622ba0bf4c4f"),
                            Value = "partOfSpeech"
                        },
                        new
                        {
                            Id = new Guid("c9ecd2db-0a26-4070-927f-71bfb8a80b81"),
                            Value = "gender"
                        },
                        new
                        {
                            Id = new Guid("45c21b89-2c3d-46bd-8c51-48e736d9ba7e"),
                            Value = "tense"
                        },
                        new
                        {
                            Id = new Guid("80a5341a-431b-49f0-858f-86feccc457b5"),
                            Value = "case"
                        },
                        new
                        {
                            Id = new Guid("8403879b-267e-4694-8b1e-f2b31fb058c0"),
                            Value = "number"
                        });
                });

            modelBuilder.Entity("DictionaryEditorDb.Models.TagsValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TagId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VocabularyItemId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TagId");

                    b.ToTable("TagsValues");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ce733542-8353-4ab0-8729-7cfdaa621c69"),
                            TagId = new Guid("e1260d2a-e7de-4a22-bd57-622ba0bf4c4f"),
                            Value = "Существительное",
                            VocabularyItemId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("d8e694f5-0d72-4845-be4c-8de15bb5773e"),
                            TagId = new Guid("e1260d2a-e7de-4a22-bd57-622ba0bf4c4f"),
                            Value = "verb",
                            VocabularyItemId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("6d1027e4-3540-4ee9-ad67-dd84b0b1e5f2"),
                            TagId = new Guid("e1260d2a-e7de-4a22-bd57-622ba0bf4c4f"),
                            Value = "adjective",
                            VocabularyItemId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("a8243201-9fe8-45ff-82d1-211086c049e0"),
                            TagId = new Guid("e1260d2a-e7de-4a22-bd57-622ba0bf4c4f"),
                            Value = "adverb",
                            VocabularyItemId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("2b87e731-5927-428d-a995-3146160f33ad"),
                            TagId = new Guid("c9ecd2db-0a26-4070-927f-71bfb8a80b81"),
                            Value = "male",
                            VocabularyItemId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("1c57ae51-646f-4147-a428-fd6bef86c760"),
                            TagId = new Guid("c9ecd2db-0a26-4070-927f-71bfb8a80b81"),
                            Value = "female",
                            VocabularyItemId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("de073eaf-d3f5-47e3-8f37-59338fe14b2f"),
                            TagId = new Guid("c9ecd2db-0a26-4070-927f-71bfb8a80b81"),
                            Value = "middle",
                            VocabularyItemId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("78071fbb-1f19-46a3-a458-e77e906bc4ef"),
                            TagId = new Guid("45c21b89-2c3d-46bd-8c51-48e736d9ba7e"),
                            Value = "past",
                            VocabularyItemId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("f88a7c76-e882-4dce-9024-9f18e911c34a"),
                            TagId = new Guid("45c21b89-2c3d-46bd-8c51-48e736d9ba7e"),
                            Value = "present",
                            VocabularyItemId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("b30b749a-35e7-4a7c-8e50-d84c9fcca794"),
                            TagId = new Guid("45c21b89-2c3d-46bd-8c51-48e736d9ba7e"),
                            Value = "future",
                            VocabularyItemId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("254ea92e-b848-4815-b41b-81dbca1d7ab4"),
                            TagId = new Guid("8403879b-267e-4694-8b1e-f2b31fb058c0"),
                            Value = "plural",
                            VocabularyItemId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("68d5999f-9d0a-4b5e-80ae-35ca860b8781"),
                            TagId = new Guid("8403879b-267e-4694-8b1e-f2b31fb058c0"),
                            Value = "single",
                            VocabularyItemId = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("DictionaryEditorDb.Models.TranslationAndExample", b =>
                {
                    b.Property<Guid>("Word1Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Word2Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Example1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Example2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Word1Id", "Word2Id");

                    b.ToTable("TranslationsAndExamples");
                });

            modelBuilder.Entity("DictionaryEditorDb.Models.VocabularyItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TagsValueId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TagsValueId")
                        .IsUnique();

                    b.ToTable("VocabularyItems");
                });

            modelBuilder.Entity("DictionaryEditorDb.Models.Word", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LanguageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VocabularyItemId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("Words");
                });

            modelBuilder.Entity("DictionaryEditorDb.Models.TagsValue", b =>
                {
                    b.HasOne("DictionaryEditorDb.Models.Tag", "Tag")
                        .WithMany("TagsValues")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("DictionaryEditorDb.Models.VocabularyItem", b =>
                {
                    b.HasOne("DictionaryEditorDb.Models.TagsValue", "TagsValue")
                        .WithOne("VocabularyItem")
                        .HasForeignKey("DictionaryEditorDb.Models.VocabularyItem", "TagsValueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DictionaryEditorDb.Models.Word", "Word")
                        .WithMany("VocabularyItems")
                        .HasForeignKey("TagsValueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TagsValue");

                    b.Navigation("Word");
                });

            modelBuilder.Entity("DictionaryEditorDb.Models.Word", b =>
                {
                    b.HasOne("DictionaryEditorDb.Models.Language", "Language")
                        .WithMany("Words")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("DictionaryEditorDb.Models.Language", b =>
                {
                    b.Navigation("Words");
                });

            modelBuilder.Entity("DictionaryEditorDb.Models.Tag", b =>
                {
                    b.Navigation("TagsValues");
                });

            modelBuilder.Entity("DictionaryEditorDb.Models.TagsValue", b =>
                {
                    b.Navigation("VocabularyItem")
                        .IsRequired();
                });

            modelBuilder.Entity("DictionaryEditorDb.Models.Word", b =>
                {
                    b.Navigation("VocabularyItems");
                });
#pragma warning restore 612, 618
        }
    }
}
