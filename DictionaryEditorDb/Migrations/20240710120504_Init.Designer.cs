// <auto-generated />
using System;
using DictionaryEditorDb;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DictionaryEditorDb.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240710120504_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DictionaryEditorDb.Models.Language", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("317cf0d7-7981-4857-8f5b-1cfe8df1e931"),
                            Value = "Russian"
                        },
                        new
                        {
                            Id = new Guid("1d1ed636-5eff-450d-856d-28b20cfac3e5"),
                            Value = "Ossetian"
                        });
                });

            modelBuilder.Entity("DictionaryEditorDb.Models.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f53ac2d4-a217-42f1-8dab-0f37a9a51526"),
                            Value = "часть речи"
                        },
                        new
                        {
                            Id = new Guid("e1c8ab6d-e05c-4bf2-8287-a5f48ab83549"),
                            Value = "род"
                        },
                        new
                        {
                            Id = new Guid("562764bb-8ebc-40f6-b517-381efb6e5e24"),
                            Value = "время"
                        },
                        new
                        {
                            Id = new Guid("e2cba40c-51fe-42c4-a936-465d38de5c66"),
                            Value = "падеж"
                        },
                        new
                        {
                            Id = new Guid("aaabe949-2a36-4137-a784-aa10b14a9fa8"),
                            Value = "число"
                        });
                });

            modelBuilder.Entity("DictionaryEditorDb.Models.TagsValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TagId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TagId");

                    b.ToTable("TagsValues");
                });

            modelBuilder.Entity("DictionaryEditorDb.Models.TranslationAndExample", b =>
                {
                    b.Property<Guid>("Word1Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Word2Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Example1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Example2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Word1Id", "Word2Id");

                    b.ToTable("TranslationsAndExamples");
                });

            modelBuilder.Entity("DictionaryEditorDb.Models.Vocabulary", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TagsValueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WordId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TagsValueId");

                    b.HasIndex("WordId");

                    b.ToTable("Vocabulary");
                });

            modelBuilder.Entity("DictionaryEditorDb.Models.Word", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LanguageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("Words");
                });

            modelBuilder.Entity("DictionaryEditorDb.Models.TagsValue", b =>
                {
                    b.HasOne("DictionaryEditorDb.Models.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("DictionaryEditorDb.Models.Vocabulary", b =>
                {
                    b.HasOne("DictionaryEditorDb.Models.TagsValue", "TagsValue")
                        .WithMany()
                        .HasForeignKey("TagsValueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DictionaryEditorDb.Models.Word", "Word")
                        .WithMany()
                        .HasForeignKey("WordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TagsValue");

                    b.Navigation("Word");
                });

            modelBuilder.Entity("DictionaryEditorDb.Models.Word", b =>
                {
                    b.HasOne("DictionaryEditorDb.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");
                });
#pragma warning restore 612, 618
        }
    }
}
